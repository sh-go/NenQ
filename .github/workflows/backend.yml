on:
  push:
    branches: 'main'
    paths: 'backend/**'

env:
  image-name-nginx: nginx
  image-name-web-back: web-back

jobs:
  changes:
    runs-on: ubuntu-latest
    outputs:
      nginx: ${{ steps.filter.outputs.nginx }}
      web-back: ${{ steps.filter.outputs.web-back }}
    steps:
      - uses: actions/checkout@v4
      - uses: dorny/paths-filter@v3
        id: filter
        with:
          filters: |
            nginx:
              - 'backend/nginx/**'
            web-back:
              - 'backend/web-back/**'

  image-push-nginx:
    if: ${{ needs.changes.outputs.nginx == 'true' }}
    needs: changes
    defaults:
      run:
        working-directory: backend/nginx
    runs-on: ubuntu-latest
    steps:
      - name: checkout
        uses: actions/checkout@v4

      - id: 'auth'
        uses: 'google-github-actions/auth@v2'
        with:
          credentials_json: '${{ secrets.GCLOUD_AUTH }}'

      - name: setup google cloud
        uses: google-github-actions/setup-gcloud@v2
        with:
          project_id: ${{ secrets.PROJECT_ID }}

      - name: configure docker for artifact registry
        run: gcloud auth configure-docker asia-northeast1-docker.pkg.dev

      - name: docker build
        run: docker build -f Dockerfile -t asia-northeast1-docker.pkg.dev/${{ secrets.PROJECT_ID }}/${{ secrets.REPOSITRY_ID }}/${{ env.image-name-nginx }}:v1 .

      - name: push
        run: docker push asia-northeast1-docker.pkg.dev/${{ secrets.PROJECT_ID }}/${{ secrets.REPOSITRY_ID }}/${{ env.image-name-nginx }}:v1

  image-push-web-back:
    if: ${{ needs.changes.outputs.web-back == 'true' }}
    needs: changes
    defaults:
      run:
        working-directory: backend/web-back
    runs-on: ubuntu-latest
    steps:
      - name: checkout
        uses: actions/checkout@v4

      - id: 'auth'
        uses: 'google-github-actions/auth@v2'
        with:
          credentials_json: '${{ secrets.GCLOUD_AUTH }}'

      - name: setup google cloud
        uses: google-github-actions/setup-gcloud@v2
        with:
          project_id: ${{ secrets.PROJECT_ID }}

      - name: configure docker for artifact registry
        run: gcloud auth configure-docker asia-northeast1-docker.pkg.dev

      - name: docker build
        run: docker build -f Dockerfile -t asia-northeast1-docker.pkg.dev/${{ secrets.PROJECT_ID }}/${{ secrets.REPOSITRY_ID }}/${{ env.image-name-web-back }}:v1 .

      - name: push
        run: docker push asia-northeast1-docker.pkg.dev/${{ secrets.PROJECT_ID }}/${{ secrets.REPOSITRY_ID }}/${{ env.image-name-web-back }}:v1

  deploy:
    if: ${{ always() }}
    needs: [image-push-nginx, image-push-web-back]
    runs-on: ubuntu-latest
    steps:
      - name: checkout
        uses: actions/checkout@v4

      - id: 'auth'
        uses: 'google-github-actions/auth@v2'
        with:
          credentials_json: '${{ secrets.GCLOUD_AUTH }}'

      - name: setup google cloud
        uses: google-github-actions/setup-gcloud@v2
        with:
          project_id: ${{ secrets.PROJECT_ID }}

      # - name: deploy
      #   run: |
      #     gcloud components install beta
      #     gcloud beta run deploy nenq-project \
      #       --project ${{ secrets.PROJECT_ID }} \
      #       --region asia-northeast1 \
      #       --service-account ${{ secrets.SERVICE_ACCOUNT }} \
      #       --container nginx \
      #       --image='asia-northeast1-docker.pkg.dev/${{ secrets.PROJECT_ID }}/${{ secrets.REPOSITRY_ID }}/${{ env.image-name-nginx }}:v1' \
      #       --port='8080' \
      #       --container web-back \
      #       --image='asia-northeast1-docker.pkg.dev/${{ secrets.PROJECT_ID }}/${{ secrets.REPOSITRY_ID }}/${{ env.image-name-web-back }}:v1' \
      #       --update-secrets=/code/config/secret/.env=nenq-api-secret:latest

      # - name: migrate
      #   run: |
      #     gcloud run jobs update db-migrate \
      #       --image=asia-northeast1-docker.pkg.dev/${{ secrets.PROJECT_ID }}/${{ secrets.REPOSITRY_ID }}/${{ env.image-name-web-back }}:v1 \
      #       --region=asia-northeast1 \
      #       --service-account ${{ secrets.SERVICE_ACCOUNT }} \
      #       --command=python \
      #       --args=manage.py,migrate \
      #       --set-secrets=/code/config/secret/.env=nenq-api-secret:latest \
      #       --parallelism=1 \
      #       --max-retries=0 \
      #       --execute-now \
      #       --wait

      # - name: create superuser
      #   run: |
      #     gcloud run jobs update create-superuser \
      #       --image=asia-northeast1-docker.pkg.dev/${{ secrets.PROJECT_ID }}/${{ secrets.REPOSITRY_ID }}/${{ env.image-name-web-back }}:v1 \
      #       --region=asia-northeast1 \
      #       --service-account ${{ secrets.SERVICE_ACCOUNT }} \
      #       --command=python \
      #       --args=manage.py,createsuperuser,--noinput \
      #       --set-secrets=/code/config/secret/.env=nenq-api-secret:latest \
      #       --parallelism=1 \
      #       --max-retries=0 \
      #       --execute-now \
      #       --wait

      # - name: collectstatic
      #   run: |
      #     gcloud run jobs update collectstatic \
      #       --image=asia-northeast1-docker.pkg.dev/${{ secrets.PROJECT_ID }}/${{ secrets.REPOSITRY_ID }}/${{ env.image-name-web-back }}:v1 \
      #       --region=asia-northeast1 \
      #       --service-account ${{ secrets.SERVICE_ACCOUNT }} \
      #       --command=python \
      #       --args=manage.py,collectstatic,--noinput \
      #       --set-secrets=/code/config/secret/.env=nenq-api-secret:latest \
      #       --parallelism=1 \
      #       --max-retries=0 \
      #       --execute-now \
      #       --wait

      - name: check nginx error
        run: |
          gcloud run jobs create check-nginx-error \
            --image=asia-northeast1-docker.pkg.dev/${{ secrets.PROJECT_ID }}/${{ secrets.REPOSITRY_ID }}/${{ env.image-name-nginx }}:v1 \
            --region=asia-northeast1 \
            --service-account ${{ secrets.SERVICE_ACCOUNT }} \
            --command=nginx \
            --args=-t \
            --parallelism=1 \
            --max-retries=0 \
            --execute-now \
            --wait
